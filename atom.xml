<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江南品味|记录编程道路上的点点滴滴!!!</title>
  <subtitle>记录编程道路上的点点滴滴!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.jiangnan.pw/"/>
  <updated>2016-10-18T15:27:35.478Z</updated>
  <id>http://blog.jiangnan.pw/</id>
  
  <author>
    <name>江南品味</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>禁止WordPress头部加载s.w.org</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/%E7%A6%81%E6%AD%A2WordPress%E5%A4%B4%E9%83%A8%E5%8A%A0%E8%BD%BDs-w-org/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/禁止WordPress头部加载s-w-org/</id>
    <published>2016-10-17T05:49:24.000Z</published>
    <updated>2016-10-18T15:27:35.478Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><br><img src="https://dl.dropbox.com/s/5et1y0kkomei4wx/wordpress1.jpg?dl=0" alt="wordpress"></p>
<p>升级到WordPress 4.6之后，有童鞋发现头部加载了一个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=&apos;dns-prefetch&apos; href=&apos;//s.w.org&apos;&gt;</div></pre></td></tr></table></figure></p>
<p>WordPress在头部添加dns-prefetch，应该是为了从s.w.org预获取表情和头像，目的是提高网页加载速度 ，但s.w.org国内根本无法访问，什么预获取、什么提高速度，都是泡影，不仅没用处，反而可能会影响速度，那就禁止它。</p>
<h2 id="将下面的代码添加到主题functions-php模板中："><a href="#将下面的代码添加到主题functions-php模板中：" class="headerlink" title="将下面的代码添加到主题functions.php模板中："></a>将下面的代码添加到主题functions.php模板中：</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">remove_action( &apos;wp_head&apos;, &apos;wp_resource_hints&apos;, 2 );</div></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function remove_dns_prefetch( $hints, $relation_type ) &#123;</div><div class="line">if ( &apos;dns-prefetch&apos; === $relation_type ) &#123;</div><div class="line">return array_diff( wp_dependencies_unique_hosts(), $hints );</div><div class="line">&#125;</div><div class="line">return $hints;</div><div class="line">&#125;</div><div class="line">add_filter( &apos;wp_resource_hints&apos;, &apos;remove_dns_prefetch&apos;, 10, 2 );</div></pre></td></tr></table></figure>
<p>方法二貌似兼容性更好些。<br>附带一个禁止加载表情代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// Remove emoji script</div><div class="line">remove_action( &apos;wp_head&apos;, &apos;print_emoji_detection_script&apos;, 7 );</div><div class="line">remove_action( &apos;wp_print_styles&apos;, &apos;print_emoji_styles&apos; );</div><div class="line">add_filter( &apos;emoji_svg_url&apos;, &apos;__return_false&apos; );</div></pre></td></tr></table></figure></p>
<p>参考：<a href="https://wordpress.org/support/topic/remove-the-new-dns-prefetch-code/" target="_blank" rel="external">https://wordpress.org/support/topic/remove-the-new-dns-prefetch-code/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress在头部添加dns-prefetch，应该是为了从s.w.org预获取表情和头像，目的是提高网页加载速度 ，但s.w.org国内根本无法访问，什么预获取、什么提高速度，都是泡影，不仅没用处，反而可能会影响速度，那就禁止它。&lt;br&gt;
    
    </summary>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 后台文件管理插件：FileBrowser</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/WordPress-%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%8F%92%E4%BB%B6%EF%BC%9AFileBrowser/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/WordPress-后台文件管理插件：FileBrowser/</id>
    <published>2016-10-17T05:05:54.000Z</published>
    <updated>2016-10-18T15:30:39.701Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><br><img src="https://dl.dropbox.com/s/ju6fp7yj13acoms/wordpress.jpg?dl=0" alt="wordpress"></p>
<p>WordPress 后台文件管理插件：FileBrowser</p>
<p>wordpress本身没有像dedecms那样的在线文件管理功能，一般的文件管理都得通过FTP来实现，把文件下载下来，然后再编辑上传，很麻烦，而且有的空间根本不支持FTP，所以我们可以使用wordpress后台文件管理插件：FileBrowser。</p>
<p><a href="https://wordpress.org/plugins/filebrowser/" target="_blank" rel="external">原版下载地址</a><br><a href="http://pan.baidu.com/share/link?shareid=374434&amp;uk=757737247" target="_blank" rel="external">汉化版下载地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress 后台文件管理插件：FileBrowser&lt;br&gt;
    
    </summary>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="plugins" scheme="http://blog.jiangnan.pw/tags/plugins/"/>
    
  </entry>
  
  <entry>
    <title>获取WordPress当前分类文章所有标签</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/%E8%8E%B7%E5%8F%96WordPress%E5%BD%93%E5%89%8D%E5%88%86%E7%B1%BB%E6%96%87%E7%AB%A0%E6%89%80%E6%9C%89%E6%A0%87%E7%AD%BE/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/获取WordPress当前分类文章所有标签/</id>
    <published>2016-10-17T04:25:16.000Z</published>
    <updated>2016-10-18T15:39:09.945Z</updated>
    
    <content type="html"><![CDATA[<p>如果需要在分类列表页面，显示当前分类文章中添加的所有标签，方便读者阅读自己喜欢的内容，下面的代码可以帮你实现这个功能。<br>获取WordPress当前分类文章所有标签<br><a id="more"></a></p>
<p>首先，在主题functions.php模板文件中添加以下函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">function get_category_tags($args) &#123;</div><div class="line">    global $wpdb;</div><div class="line">    $tags = $wpdb-&gt;get_results</div><div class="line">    (&quot;</div><div class="line">        SELECT DISTINCT terms2.term_id as tag_id, terms2.name as tag_name</div><div class="line">        FROM</div><div class="line">            $wpdb-&gt;posts as p1</div><div class="line">            LEFT JOIN $wpdb-&gt;term_relationships as r1 ON p1.ID = r1.object_ID</div><div class="line">            LEFT JOIN $wpdb-&gt;term_taxonomy as t1 ON r1.term_taxonomy_id = t1.term_taxonomy_id</div><div class="line">            LEFT JOIN $wpdb-&gt;terms as terms1 ON t1.term_id = terms1.term_id,</div><div class="line">            $wpdb-&gt;posts as p2</div><div class="line">            LEFT JOIN $wpdb-&gt;term_relationships as r2 ON p2.ID = r2.object_ID</div><div class="line">            LEFT JOIN $wpdb-&gt;term_taxonomy as t2 ON r2.term_taxonomy_id = t2.term_taxonomy_id</div><div class="line">            LEFT JOIN $wpdb-&gt;terms as terms2 ON t2.term_id = terms2.term_id</div><div class="line">        WHERE</div><div class="line">            t1.taxonomy = &apos;category&apos; AND p1.post_status = &apos;publish&apos; AND terms1.term_id IN (&quot;.$args[&apos;categories&apos;].&quot;) AND</div><div class="line">            t2.taxonomy = &apos;post_tag&apos; AND p2.post_status = &apos;publish&apos;</div><div class="line">            AND p1.ID = p2.ID</div><div class="line">        ORDER by tag_name</div><div class="line">    &quot;);</div><div class="line">    $count = 0;</div><div class="line">    if($tags) &#123;</div><div class="line">        foreach ($tags as $tag) &#123;</div><div class="line">            $mytag[$count] = get_term_by(&apos;id&apos;, $tag-&gt;tag_id, &apos;post_tag&apos;);</div><div class="line">            $count++;</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">      $mytag = NULL;</div><div class="line">    &#125;</div><div class="line">    return $mytag;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译：<a href="http://www.ludou.org/wordpress-get-tags-specific-to-category.html" target="_blank" rel="external">http://www.ludou.org/wordpress-get-tags-specific-to-category.html</a><br>源代码出自：<a href="https://wordpress.org/support/topic/get-tags-specific-to-category" target="_blank" rel="external">https://wordpress.org/support/topic/get-tags-specific-to-category</a></p>
<p>其次，将下面调用输出代码，添加到主题archive.php模板适当位置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    $cat= single_cat_title(&apos;&apos;, false);</div><div class="line">    $args = array( &apos;categories&apos; =&gt; get_cat_ID($cat));</div><div class="line">    $tags = get_category_tags($args);</div><div class="line">    $content .= &quot;&lt;ul class=&apos;cat-tag&apos;&gt;&quot;;</div><div class="line">    if(!empty($tags)) &#123;</div><div class="line">        foreach ($tags as $tag) &#123;</div><div class="line">            $content .= &quot;&lt;li&gt;&lt;a href=\&quot;&quot;.get_tag_link($tag-&gt;term_id).&quot;\&quot;&gt;&quot;.$tag-&gt;name.&quot;&lt;/a&gt;&lt;/li&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    $content .= &quot;&lt;/ul&gt;&quot;;</div><div class="line">    echo $content;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>个人感觉放到头部调用函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php get_header(); ?&gt;</div></pre></td></tr></table></figure></p>
<p>下面比较合适。<br>最后，再适当加上样式即可：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.cat-tag</span>&#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.cat-tag</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果需要在分类列表页面，显示当前分类文章中添加的所有标签，方便读者阅读自己喜欢的内容，下面的代码可以帮你实现这个功能。&lt;br&gt;获取WordPress当前分类文章所有标签&lt;br&gt;
    
    </summary>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Alfred实现七牛上传文件</title>
    <link href="http://blog.jiangnan.pw/2016/10/16/Alfred%E5%AE%9E%E7%8E%B0%E4%B8%83%E7%89%9B%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://blog.jiangnan.pw/2016/10/16/Alfred实现七牛上传文件/</id>
    <published>2016-10-16T00:48:27.000Z</published>
    <updated>2016-10-18T15:39:08.077Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p>
<h2 id="alfred-workflow-qshell"><a href="#alfred-workflow-qshell" class="headerlink" title="alfred-workflow-qshell"></a>alfred-workflow-qshell</h2><blockquote>
<p>qshell 是基于七牛API参考手册实现的一个方便开发者测试和使用七牛API服务的命令行工具。</p>
</blockquote>
<p>alfred-workflow-qshell 是一个配合七牛开发者工具 <a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">qshell</a> 使用的 Alfred workflow。</p>
<p>alfred-workflow-qshell 使用可视化流程后台执行 <code>qshell</code> 命令行，易用高效。</p>
<h2 id="功能-amp-特点"><a href="#功能-amp-特点" class="headerlink" title="功能 &amp; 特点"></a>功能 &amp; 特点</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li>支持多文件上传</li>
<li>支持上传文件添加前缀</li>
<li>获取空间文件外链</li>
<li>查看空间文件基本信息</li>
<li>移动、复制、删除、重命名</li>
<li>预览、下载空间文件</li>
<li>完善的文件操作反馈（通知、错误等）</li>
</ul>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul>
<li>curl 下载文件</li>
<li>不支持文件夹上传<br>要求空间的文件名为不能为空或全为空格</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><ul>
<li>默认关键字 <code>fput</code> 搜索本地单个文件，上传文件</li>
<li>搜索文件时使用 <strong>Buffer</strong> 功能进行文件多选，上传多文件（<a href="https://github.com/onestark/better-series/blob/master/better-workflow.md" target="_blank" rel="external">Buffer 的使用</a>）</li>
<li>选中一或多个文件，调出 <strong>Actions</strong> 文件操作菜单，上传文件</li>
</ul>
<h3 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h3><ul>
<li>默认关键字 <code>fstat</code> 搜索空间文件</li>
<li>移动、复制、删除、重命名、外链、信息、预览、下载</li>
</ul>
<h2 id="安装-amp-配置"><a href="#安装-amp-配置" class="headerlink" title="安装 &amp; 配置"></a>安装 &amp; 配置</h2><p>要求：<strong>qshell</strong>、<strong>Alfred with Powerpack</strong></p>
<h3 id="1-qshell"><a href="#1-qshell" class="headerlink" title="1. qshell"></a>1. <a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">qshell</a></h3><p>或前往 <a href="https://github.com/qiniu/qshell" target="_blank" rel="external">GitHub</a></p>
<p>安装：只需要下载 zip 包之后解压即可使用。Mac 64 位系统只需要解压后的文件 <code>qshell_darwin_amd64</code>。把此文件放到 <code>/usr/local/bin</code> 目录。</p>
<p>配置：从七牛的后台的账号设置中获取 <strong>AccessKey</strong> 和 <strong>SecretKey</strong>。配置本地 qshell：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 设置密钥</div><div class="line">qshell account [AccessKey] [SecretKey]</div><div class="line"># 查看设置</div><div class="line">qshell account</div></pre></td></tr></table></figure>
<p>注意：上面的设置命令不需要输入方括号 <code>[]</code>。</p>
<p>配置 qshell 完毕后会生成 <code>~/.qshell</code> 文件夹，其中 <code>account.json</code> 文件保存了 AccessKey 和 SecretKey 信息。</p>
<h3 id="2-Alfred"><a href="#2-Alfred" class="headerlink" title="2. Alfred"></a>2. <a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a></h3><p>下载后缀名为 <code>.alfredworkflow</code> 的安装包安装即可。</p>
<p>注意：Alfred 需要购买 <a href="https://www.alfredapp.com/powerpack/buy/" target="_blank" rel="external">Powerpack</a> 才能解锁 workflows 功能。</p>
<h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><ul>
<li>[x] account，显示当前用户的 AccessKey 和 SecretKey</li>
<li>[x] fput，以文件表单的方式上传一个文件</li>
<li>[x] stat，查询七牛空间中一个文件的基本信息</li>
<li>[x] delete，删除七牛空间中的一个文件</li>
<li>[x] move，移动或重命名七牛空间中的一个文件</li>
<li>[x] copy，复制七牛空间中的一个文件</li>
<li>[x] 查新基本信息时可以获取文件外链</li>
<li>[x] 预览功能</li>
<li>[x] 下载功能</li>
</ul>
<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><h3 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h3><p><a href="./LICENSE">MIT License</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;alfred-workflow-qshell&lt;br&gt;qshell 是基于七牛API参考手册实现的一个方便开发者测试和使用七牛API服务的命令行工具。&lt;br&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://blog.jiangnan.pw/categories/Mac/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/categories/Mac/Mac%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Alfred" scheme="http://blog.jiangnan.pw/tags/Alfred/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/tags/Mac%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>自动从其它站点RSS抓取文章</title>
    <link href="http://blog.jiangnan.pw/2016/10/13/%E8%87%AA%E5%8A%A8%E4%BB%8E%E5%85%B6%E5%AE%83%E7%AB%99%E7%82%B9RSS%E6%8A%93%E5%8F%96%E6%96%87%E7%AB%A0/"/>
    <id>http://blog.jiangnan.pw/2016/10/13/自动从其它站点RSS抓取文章/</id>
    <published>2016-10-13T08:17:14.000Z</published>
    <updated>2016-10-17T04:16:08.176Z</updated>
    
    <content type="html"><![CDATA[<p>代码基本原理，新建一个自定义分类法“shot”，自动从另一个站点的RSS抓取文章，放在一个数组中，再用这个数组创建“shot”文章，并为文章添加自定义栏目image和link_url，方便调用缩略图和原文链接。<a id="more"></a></p>
<p>将下面代码添加到当前主题functions.php中即可。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?</span></div><div class="line"><span class="comment">/* Post Type</span></div><div class="line">   ------------------------------------------------------------------------------------ */</div><div class="line">add_action( <span class="string">'init'</span>, <span class="string">'register_cpt_shot'</span> );</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">register_cpt_shot</span><span class="params">()</span> </span>&#123;</div><div class="line">    $labels = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'name'</span> =&gt; _x( <span class="string">'Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'singular_name'</span> =&gt; _x( <span class="string">'Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'add_new'</span> =&gt; _x( <span class="string">'Add New'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'add_new_item'</span> =&gt; _x( <span class="string">'Add New Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'edit_item'</span> =&gt; _x( <span class="string">'Edit Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'new_item'</span> =&gt; _x( <span class="string">'New Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'view_item'</span> =&gt; _x( <span class="string">'View Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'search_items'</span> =&gt; _x( <span class="string">'Search Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'not_found'</span> =&gt; _x( <span class="string">'No dribble shots found'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'not_found_in_trash'</span> =&gt; _x( <span class="string">'No dribble shots found in Trash'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'parent_item_colon'</span> =&gt; _x( <span class="string">'Parent Dribbble Shot:'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'menu_name'</span> =&gt; _x( <span class="string">'Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">    );</div><div class="line">    $args = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'labels'</span> =&gt; $labels,</div><div class="line">        <span class="string">'hierarchical'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'supports'</span> =&gt; <span class="keyword">array</span>( <span class="string">'title'</span>, <span class="string">'custom-fields'</span> ),</div><div class="line">        <span class="string">'public'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_ui'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_in_menu'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_in_nav_menus'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'publicly_queryable'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'exclude_from_search'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'has_archive'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'query_var'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'can_export'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'rewrite'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'capability_type'</span> =&gt; <span class="string">'post'</span></div><div class="line">    );</div><div class="line">    register_post_type( <span class="string">'shot'</span>, $args );</div><div class="line">&#125;</div><div class="line"><span class="comment">/* Import Shots via RSS</span></div><div class="line">   ------------------------------------------------------------------------------------ */</div><div class="line"><span class="comment">// grab the image src from teh description</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_image</span><span class="params">($string)</span> </span>&#123;</div><div class="line">    preg_match_all(<span class="string">'/&lt;img[^&gt;]+&gt;/i'</span>,$string, $result);</div><div class="line">    $img = <span class="keyword">array</span>();</div><div class="line">    <span class="keyword">foreach</span>( $result[<span class="number">0</span>] <span class="keyword">as</span> $img_tag)</div><div class="line">    &#123;</div><div class="line">        preg_match_all(<span class="string">'/(src)=("[^"]*")/i'</span>,$img_tag, $img[$img_tag]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> trim($img[$img_tag][<span class="number">2</span>][<span class="number">0</span>], <span class="string">'"'</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">// create an array of the feed items</span></div><div class="line"><span class="keyword">include_once</span>(ABSPATH . WPINC . <span class="string">'/feed.php'</span>);</div><div class="line">$feed = fetch_feed(<span class="string">'http://dribbble.com/tammyhart/shots.rss'</span>);</div><div class="line">$feed = $feed-&gt;get_items(<span class="number">0</span>);</div><div class="line">$shots = <span class="keyword">array</span>();</div><div class="line"><span class="keyword">foreach</span> ( $feed <span class="keyword">as</span> $item ) :</div><div class="line">$shots[$item-&gt;get_date(<span class="string">'Ymd'</span>)] = <span class="keyword">array</span>(</div><div class="line">    <span class="string">'id'</span>    =&gt; $item-&gt;get_date(<span class="string">'Ymd'</span>),</div><div class="line">    <span class="string">'url'</span>   =&gt; esc_url( $item-&gt;get_permalink() ),</div><div class="line">    <span class="string">'date'</span>  =&gt; $item-&gt;get_date(<span class="string">'Y-m-d H:i:s'</span>),</div><div class="line">    <span class="string">'title'</span> =&gt; esc_html( $item-&gt;get_title() ),</div><div class="line">    <span class="string">'image'</span> =&gt; get_image($item-&gt;get_description())</div><div class="line">    );</div><div class="line"><span class="keyword">endforeach</span>;</div><div class="line"><span class="comment">// create posts from our array</span></div><div class="line"><span class="keyword">foreach</span> ($shots <span class="keyword">as</span> $shot) &#123;</div><div class="line">    $shot_post = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'post_type'</span>     =&gt; <span class="string">'shot'</span>,</div><div class="line">        <span class="string">'post_status'</span>   =&gt; <span class="string">'publish'</span>,</div><div class="line">        <span class="string">'post_author'</span>   =&gt; <span class="number">1</span>,</div><div class="line">        <span class="string">'post_title'</span>    =&gt; $shot[<span class="string">'title'</span>],</div><div class="line">        <span class="string">'post_date'</span>     =&gt; $shot[<span class="string">'date'</span>]</div><div class="line">        );</div><div class="line">    $shot_post_meta = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'link_url'</span>  =&gt; $shot[<span class="string">'url'</span>],</div><div class="line">        <span class="string">'image'</span>     =&gt; $shot[<span class="string">'image'</span>]</div><div class="line">        );</div><div class="line">    $posts = get_posts(</div><div class="line">        <span class="keyword">array</span>(</div><div class="line">            <span class="string">'post_type'</span> =&gt; <span class="string">'shot'</span>,</div><div class="line">            <span class="string">'meta_key'</span>  =&gt; <span class="string">'link_url'</span>,</div><div class="line">            <span class="string">'meta_value'</span>=&gt; $shot_post_meta[<span class="string">'link_url'</span>]</div><div class="line">            )</div><div class="line">        );</div><div class="line">    <span class="keyword">if</span> (count($posts) == <span class="number">0</span>) &#123;</div><div class="line">        $post_id = wp_insert_post($shot_post);</div><div class="line">        add_post_meta($post_id, <span class="string">'link_url'</span>, $shot_post_meta[<span class="string">'link_url'</span>], <span class="keyword">true</span>);</div><div class="line">        add_post_meta($post_id, <span class="string">'image'</span>, $shot_post_meta[<span class="string">'image'</span>], <span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>修改第66行的”<a href="http://dribbble.com/tammyhart/shots.rss“为准备抓取文章站点的RSS地址，还可以修改第80行后的”shot“为你所用主题自定义分类法名称，抓取的文章会自动添加到该分类法中。" target="_blank" rel="external">http://dribbble.com/tammyhart/shots.rss“为准备抓取文章站点的RSS地址，还可以修改第80行后的”shot“为你所用主题自定义分类法名称，抓取的文章会自动添加到该分类法中。</a><br>上述代码中并没有抓取文章内容的功能，仅供参考学习之用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码基本原理，新建一个自定义分类法“shot”，自动从另一个站点的RSS抓取文章，放在一个数组中，再用这个数组创建“shot”文章，并为文章添加自定义栏目image和link_url，方便调用缩略图和原文链接。
    
    </summary>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>热烈庆祝江南品味正式上线！</title>
    <link href="http://blog.jiangnan.pw/2016/10/13/%E7%83%AD%E7%83%88%E5%BA%86%E7%A5%9D%E6%B1%9F%E5%8D%97%E5%93%81%E5%91%B3%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF%EF%BC%81/"/>
    <id>http://blog.jiangnan.pw/2016/10/13/热烈庆祝江南品味正式上线！/</id>
    <published>2016-10-13T07:39:35.000Z</published>
    <updated>2016-10-17T04:17:22.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote>
<p>最近，本地搭建的Web系统遭遇黑客攻击，积累了三年的代码资源都被植入了恶意代码。经过了两天的努力奋战挽救回来了所有的代码。但是保加利亚的黑客不断的扫描我的IP，致使我的电脑CPU一度达到80℃~90℃，无奈之下展示关闭服务器。<br><a id="more"></a></p>
</blockquote>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><blockquote>
<p>目前转投HEXO，Github门下开始技术博客的更新，今天发布的只是一个测试文章，因为MarkDown的语法还不熟悉只能边学边写希望大家谅解。最后热烈庆祝<strong>江南品味</strong>正式上线！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最近，本地搭建的Web系统遭遇黑客攻击，积累了三年的代码资源都被植入了恶意代码。经过了两天的努力奋战挽救回来了所有的代码。但是保加利亚的黑客不断的扫描我的IP，致使我的电脑CPU一度达到80℃~90℃，无奈之下展示关闭服务器。&lt;br&gt;
    
    </summary>
    
    
      <category term="生活记事" scheme="http://blog.jiangnan.pw/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E4%BA%8B/"/>
    
  </entry>
  
</feed>
