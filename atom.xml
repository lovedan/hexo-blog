<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江南品味|记录编程道路上的点点滴滴!!!</title>
  <subtitle>记录编程道路上的点点滴滴!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.jiangnan.pw/"/>
  <updated>2017-01-20T07:39:39.454Z</updated>
  <id>http://blog.jiangnan.pw/</id>
  
  <author>
    <name>江南品味</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决升级 OS X EI Capitan 后 Wineskin 打包的游戏无法运行的问题</title>
    <link href="http://blog.jiangnan.pw/2017/01/20/%E8%A7%A3%E5%86%B3%E5%8D%87%E7%BA%A7-OS-X-EI-Capitan-%E5%90%8E-Wineskin-%E6%89%93%E5%8C%85%E7%9A%84%E6%B8%B8%E6%88%8F%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.jiangnan.pw/2017/01/20/解决升级-OS-X-EI-Capitan-后-Wineskin-打包的游戏无法运行的问题/</id>
    <published>2017-01-20T04:05:05.000Z</published>
    <updated>2017-01-20T07:39:39.454Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt-->
<p>此前苹果发布了 OS X 的新版本 EI Capitan，系统有更新当然是立马进行升级享受新鲜事物带来的快感了，但前几天想玩耍一局 Pro Evolution Soccer(实况足球)的时候，发现我深爱的游戏再也启动不起来了，和同样爱玩儿实况的同事交流之后发现情况大致有如下两种：</p>
<ol>
<li>双击 <code>.app</code> 文件，程序是可以打开的，但是窗口始终无法显示（我的电脑）；</li>
<li>双击 <code>.app</code> 文件，程序无法打开，系统提示 X11 无法打开，截图如下（同事的）：</li>
</ol>
<p><img src="https://lh3.googleusercontent.com/-QBgvDnnM1I8/WIF8A7QmcZI/AAAAAAAAAx4/9lYwjuvkybE/2017-01-20_11-54-59.png" alt=""></p>
<p>无法在绿茵场上尽情驰骋，这种事显然不能忍，立马去 <a href="http://wineskin.urgesoftware.com/" target="_blank" rel="external">Wineskin 官网</a>看了看，发现有一条关于 OS X EI Capitan 的新闻：</p>
<blockquote>
<p>Wineskin does not currently work correctly on El Capitan. The issue is being looked into, but I have no ETA for a fix. I’ll get a fix out as soon as I can.<br>Some people have been able to upgrade to the latest version of XQuartz, and change their wrappers to use XQuartz and not WineskinX11 and have gotten wrappers to work, but this method has not worked for everyone.<br>Please add to the discussion here if you are helping find a solution.</p>
</blockquote>
<p>又看到有一条新版本发布的新闻：</p>
<blockquote>
<p>I’ve released an update for Wineskin… version 2.6.1.<br>I think I’ve fixed all the El Capitan bugs and it should work fine on 10.6 - 10.11 now.<br>important point. This has to change how an engine is installed in a wrapper slightly. If you update a wrapper to 2.6.1 and it does not work right, please reinstall the engine in the wrapper. You can just use Change Engine and install the same one back in, but it will install it correctly for 2.6.1 and then things should work right. Newly made wrappers should have no issues.</p>
</blockquote>
<p>这说明官方发布的最新的 2.6.1 版本已经解决了该问题，那么剩下的问题就简单多了，我们只需要将 <code>Wineskin Wrapper</code> 给替换成官方发布的最新版本即可。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol>
<li>在应用程序中找到需要修复的游戏，右键选择 <code>显示包内容</code>；</li>
<li>打开 <code>Wineskin.app</code>，选择 <code>advance</code>，记录下引擎版本号：</li>
</ol>
<p><img src="https://lh3.googleusercontent.com/-6iUQqxE4ehs/WIGN2RoMBgI/AAAAAAAAAyY/PZ-MapzWiSU/s0/2017-01-20_13-11-04.png" alt=""></p>
<ol>
<li>下载最新版本的 <a href="http://wineskin.urgesoftware.com/tiki-index.php?page=Downloads" target="_blank" rel="external">Wineskin Winery</a>；</li>
<li>打开 <code>Wineskin Winery</code>，添加一个新的 <code>engine</code>，版本号最好与之前记录的版本号一致：</li>
</ol>
<p><img src="https://lh3.googleusercontent.com/-6GZhT7VGSoE/WIGOD7jQBmI/AAAAAAAAAyc/8Vsd_dVjhUA/s0/2017-01-20_13-11-58.png" alt=""></p>
<ol>
<li>更新 <code>Wrapper Version</code> 至最新版，只要在 2.6.1 以上即代表已经使用了官方修复 OS X EI Capitan 问题的 <code>Wrapper</code>：</li>
</ol>
<p><img src="https://lh3.googleusercontent.com/-YqFjJh_LWPA/WIGOQFuz0TI/AAAAAAAAAyg/N5YYm23sKAc/s0/2017-01-20_13-12-47.png" alt=""></p>
<ol>
<li>选择 <code>Create New Blank Wrapper</code>，填写游戏名称并选择 <code>Create</code>。如果有提示需要安装东西，都可以选择 <code>Cancel</code>；</li>
<li>创建成功后，将原游戏 <code>.app</code> 文件包内容中的 <code>Content/Resources/driver_c</code> 文件夹以及 <code>Content/Resources/system.reg</code>、<code>Content/Resources/user.reg</code>、<code>Content/Resources/userdef.reg</code> 这三个文件覆盖到我们新创建的 <code>Wrapper</code> 文件包内容中的 <code>Content/Resources/</code> 文件夹中，它们分别相当于 <code>Windows</code> 系统中的 C 盘和注册表；</li>
<li>再打开我们新创建的 <code>Wrapper</code> 文件包内容中的 <code>&#39;Wineskin.app&#39;</code>，选择 <code>advance</code>，然后选择程序的启动路径，即刚刚覆盖的 <code>driver_c</code> 文件夹中我们想要启动的 <code>exe</code> 程序：</li>
</ol>
<p><img src="https://lh3.googleusercontent.com/-D0qlGz7IKW4/WIGOfMRqr1I/AAAAAAAAAyk/rRYqm5pR1LA/s0/2017-01-20_13-13-48.png" alt=""></p>
<ol>
<li>退回到我们在第 6 步中生成新 Wineskin Wrapper 的目录，当然现在它已经是一个完整的游戏程序了，双击运行它，然后 enjoy it!</li>
</ol>
<p>鉴于评论区有朋友反映下载 <code>engine</code> 和 <code>wrapper</code> 总是失败，所以现在将最新的 <code>engine</code> 和 <code>wrapper</code> 上传到网盘供大家下载：</p>
<ol>
<li>Engine 1.7.52 <a href="http://pan.baidu.com/s/1bnoelND" target="_blank" rel="external">下载地址</a>，提取码：<code>ikhq</code>；</li>
<li>Wrapper 2.6.1 <a href="http://pan.baidu.com/s/1c0c6Qo4" target="_blank" rel="external">下载地址</a>，提取码：<code>v1dh</code>。</li>
</ol>
<p>下载后，将 <code>WS9Wine1.7.52.tar.7z</code> 这个文件放入 <code>~/Library/Application Support/Wineskin/Engines</code> 这个文件夹；将 <code>Wineskin-2.6.1.app.zip</code> 这个文件解压缩，得到 <code>Wineskin-2.6.1.app</code> 这个文件，将其放入 <code>~/Library/Application Support/Wineskin/Wrapper</code> 这个文件夹，然后重新打开上面第 3 步中下载的 <code>Wineskin Winery</code>，如果 <code>engine</code> 和 <code>wrapper</code> 都已经存在了，直接进行第 6 步的操作即可。</p>
<hr>
<p>再放上 <code>Wineskin Winery</code> 的网盘地址：</p>
<p>Wineskin Winery 1.7 <a href="http://pan.baidu.com/s/1hq8TO8G" target="_blank" rel="external">下载地址</a>，提取码：<code>dpdu</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;!--excerpt--&gt;
&lt;p&gt;此前苹果发布了 OS X 的新版本 EI Capitan，系统有更新当然是立马进行升级享受新鲜事物带来的快感了，但前几天想玩耍一局 Pro Evolution Soccer(实况足球)的时候，发现我深爱的游戏再也启动不起来了，和同样爱玩儿实况的
    
    </summary>
    
      <category term="Mac" scheme="http://blog.jiangnan.pw/categories/Mac/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/categories/Mac/Mac%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/tags/Mac%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Nginxのエラーページをカスタマイズする方法</title>
    <link href="http://blog.jiangnan.pw/2017/01/19/Nginx%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.jiangnan.pw/2017/01/19/Nginxのエラーページをカスタマイズする方法/</id>
    <published>2017-01-19T08:06:00.000Z</published>
    <updated>2017-01-20T06:24:06.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Nginxのデフォルトのエラーページは格好良くないし、Nginxを使ってることがバレバレです。それが嫌だったので以下の方法でカスタマイズしました。</p>
</blockquote>
<h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><blockquote>
<p>Nginxではエラーページのカスタマイズにはerror_pageディレクティブを使います。<br>カスタマイズの基本的な方法は、custom_404.htmlを作って、nginxの設定ファイルを以下の様な感じにします。<br>これで、Nginxを再起動して、存在しないファイルへリクエストするとcustom_404.htmlが帰ってくるようになります。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line"></div><div class="line">    # 中略</div><div class="line"></div><div class="line">    error_page 404 /custom_404.html;</div><div class="line">    location = /custom_404.html &#123;</div><div class="line">        root /opt/nginx/html;</div><div class="line">        internal;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # 中略</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="応用"><a href="#応用" class="headerlink" title="応用"></a>応用</h2><blockquote>
<p>以下では、よりより実践的な例を紹介します。</p>
<p>IP直打ちでのアクセスは全てエラーページを表示</p>
<p>IPアドレスを直接入力してアクセスしてきた場合や想定外のホスト名でアクセスしてきた場合に常に<code>custom_404.html</code>を表示したければ以下の様にします。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80 default_server;</div><div class="line">    error_page 404 /custom_404.html;</div><div class="line">    location / &#123;</div><div class="line">        return 404;</div><div class="line">    &#125;</div><div class="line">    location = /custom_404.html &#123;</div><div class="line">        root /opt/nginx/html;</div><div class="line">        internal;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>どんなエラーが発生しても404ページを返す</p>
<p>実際に発生しているエラーが403だろうが503だろうが、ユーザーには404エラーが発生しているように見せかけます。<br>下の例では400, 401, 403, 500, 502, 503のいずれが発生してもクライアントに返すHTTPステータスコードを404に書き換え、custom_404.htmlを返します。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name example.com;</div><div class="line">    error_page 400 401 403 404 500 502 503 =404 /custom_404.html;</div><div class="line">    location = /custom_404.html &#123;</div><div class="line">        root /opt/nginx/html;</div><div class="line">        internal;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>管理画面を隠す</p>
<p>特定のIP以外から管理画面へアクセスされた時は404画面を出します。<br>この例では<code>192.168.0.1</code>からの管理画面へのリクエストは許可し、それ以外の場合は404ステータスとcustom_404.htmlを返します。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Nginxのデフォルトのエラーページは格好良くないし、Nginxを使ってることがバレバレです。それが嫌だったので以下の方法でカスタマイズしました。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;基本&quot;&gt;&lt;a href=&quot;#基本&quot; class=
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="Nginx" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/Nginx/"/>
    
    
      <category term="nginx" scheme="http://blog.jiangnan.pw/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>江南云服务正式上线</title>
    <link href="http://blog.jiangnan.pw/2017/01/10/%E6%B1%9F%E5%8D%97%E4%BA%91%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF/"/>
    <id>http://blog.jiangnan.pw/2017/01/10/江南云服务正式上线/</id>
    <published>2017-01-10T05:10:27.000Z</published>
    <updated>2017-01-20T05:49:50.307Z</updated>
    
    <content type="html"><![CDATA[<p>江南云-提供基于百度云，天翼云(正在开发中Y(^_^)Y)的云存储服务，包括图片，音乐，视频，文件的云存储下载服务。</p>
<ul>
<li>提供百度云，天翼云本身不支持的迅雷等工具直接下载的功能。</li>
<li>采用用户本地存储TOKEN的方式进行授权，充分保证用户的个人隐私</li>
<li>提供图片，音视频等流媒体的直接外链功能，从此站长再也不用费心找图床。</li>
</ul>
<p><img src="https://lh3.googleusercontent.com/-qqlLrJo8JS4/WHRseojYN2I/AAAAAAAAAuQ/lXV-fkSg97M/s0/2017-01-10_14-09-12.png" alt="江南云首页"><br><img src="https://lh3.googleusercontent.com/-tQF7SvGlpMk/WHRudf1irvI/AAAAAAAAAuw/YwENVxgYmk0/s0/2017-01-10_14-17-39.png" alt="授权代码获取"><br><img src="https://lh3.googleusercontent.com/-fIOPEh7rQ1E/WHRus4ZSdeI/AAAAAAAAAu0/Ib9kRzuSxHM/s0/2017-01-10_14-18-42.png" alt="江南云文件管理"><br><img src="https://lh3.googleusercontent.com/-dagoHUPxzQQ/WHRvn18eX8I/AAAAAAAAAvA/2h1_xL5NPW8/s0/2017-01-10_14-22-39.png" alt="江南云侧边栏"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;江南云-提供基于百度云，天翼云(正在开发中Y(^_^)Y)的云存储服务，包括图片，音乐，视频，文件的云存储下载服务。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供百度云，天翼云本身不支持的迅雷等工具直接下载的功能。&lt;/li&gt;
&lt;li&gt;采用用户本地存储TOKEN的方式进行授权，充分保证用户
    
    </summary>
    
      <category term="作品展示" scheme="http://blog.jiangnan.pw/categories/%E4%BD%9C%E5%93%81%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="江南云" scheme="http://blog.jiangnan.pw/tags/%E6%B1%9F%E5%8D%97%E4%BA%91/"/>
    
      <category term="作品展示" scheme="http://blog.jiangnan.pw/tags/%E4%BD%9C%E5%93%81%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>Laravel5自定义环境变量</title>
    <link href="http://blog.jiangnan.pw/2016/12/01/Laravel%205%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://blog.jiangnan.pw/2016/12/01/Laravel 5 自定义环境变量/</id>
    <published>2016-12-01T07:19:55.000Z</published>
    <updated>2017-02-03T04:46:47.528Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt-->
<p>Laravel 5 中提供了一种通过<code>.env</code>文件定义环境变量的方式，根据官方文档的说明应该在不同的环境下使用不同的<code>.env</code>文件，并且此文件不应该提交到版本控制中去。如此设定自然是为了方便不同的环境或者多名开发人员完全可以使用自已的<code>.env</code>环境变量。</p>
<p>但是官方文档中对于如何自定义<code>.env</code>文件中的环境变量却提的很少。文档中只提及了在需要自定义环境变量时最好是在<code>.env.example</code>文件中写一份变量的定义，以方便其他开发人员配置。</p>
<p>下面就以我的“遭遇”来讲下 Laravel 5 中如何自定义环境变量。</p>
<p>（内容比较啰嗦，可直接跳到最后<a href="#环境变量的正确用法">环境变量的正确用法</a>部分）</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>因为我需要路由里面根据不同的二级域名选择不同的控制器，而测试环境和生产环境中的顶级域名不同，于是我打算把顶级域名作为一项环境变量写在<code>.env</code>文件中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.env</div><div class="line"></div><div class="line">APP_BASE_URL=test.com</div></pre></td></tr></table></figure>
<p>路由中的写法（为了演示我把路由的处理直接写成了闭包，而实际用于生产环境的代码是不能写成闭包的，原因就是路由缓存不支持闭包，不打算使用路由缓存的可以无视）：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">route.php</div><div class="line"></div><div class="line">$_app_base_url = env(<span class="string">'APP_BASE_URL'</span>);</div><div class="line">Route::group([<span class="string">'domain'</span> =&gt; <span class="string">"u.&#123;$_app_base_url&#125;"</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">    	<span class="keyword">return</span> <span class="string">"TEST"</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>恶梦就此开始。</p>
<h2 id="env-函数与-ENV超全局变量"><a href="#env-函数与-ENV超全局变量" class="headerlink" title="env()函数与$_ENV超全局变量"></a><code>env()</code>函数与<code>$_ENV</code>超全局变量</h2><p>这种写法本身是没有任何问题的，访问<code>u.test.com</code>，在开发环境中一切正常。然后使用命令<code>php artisan config:cache</code>生成配置缓存后却出现了找不到控制器的错误。经过调试发现<code>$_app_base_url</code>的输出值是<code>null</code>。</p>
<p><code>env()</code>函数的作用是从<code>$_ENV</code>超全局变量中取出对应的值，而 Laravel 在启动的时候又会自动加载<code>.env</code>文件中的信息到<code>$_ENV</code>超全局变量中，所以如果没问题的话在<code>$_ENV</code>环境变量中应该能找到刚才定义的环境变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var_dump($_ENV);</div></pre></td></tr></table></figure>
<p>输出了很多环境变量的信息，但。。。没有看到任何在<code>.env</code>里面定义的信息。难道信息没有被加载到<code>$_ENV</code>？于是尝试清除配置缓存：<code>php artisan config:clear</code>后再尝试，发现<code>.env</code>里面的信息确实被加载到了<code>$_ENV</code>超全局变量中。。。</p>
<p>看来这个问题和配置缓存脱不了关系了。</p>
<h2 id="配置缓存"><a href="#配置缓存" class="headerlink" title="配置缓存"></a>配置缓存</h2><p>Laravel 中为了加快程序的执行效率做了很多缓存优化的工作，其中就包括配置缓存、路由缓存等，通过把多个零碎的配置文件合并成一个大的配置文件来减少加载的文件数量，从而加快运行速度（如果你研究过PHP的性能的话就会知道IO操作其实占了很大一部分开销）。</p>
<p>Laravel 的配置缓存被保存在<code>bootstrap/cache/config.php</code>文件中。打开这个文件可以看到这个文件就是把<code>config</code>文件夹的所有文件合并成了一个大的配置文件。<code>config.php</code>直接返回一个数组，数组的键名对应<code>config</code>文件夹下的文件名，数组的值对应<code>config</code>文件夹下文件返回的配置信息。</p>
<p>找遍整个配置文件发现没有任何和<code>.env</code>文件里面的定义相关的内容。</p>
<p>难道<code>env()</code>函数会从配置缓存中读取数据，因为这个文件里面没有对应的数据所以才返回<code>null</code>？抱着这个想法去查看<code>env()</code>的源码，发现这个函数和配置缓存没任何关系。。。</p>
<h2 id="env文件的加载"><a href="#env文件的加载" class="headerlink" title=".env文件的加载"></a><code>.env</code>文件的加载</h2><p>这时我产生一个想法：有没有可能是框架检测存在配置缓存文件时就不去加载<code>.env</code>了呢？</p>
<p>如果是这样的话框架源码里面肯定会有地方去判断<code>bootstrap/cache/config.php</code>文件是否存在。</p>
<p>直接在<code>vendor</code>里面搜<code>cache/config.php</code>，果然找到在<code>vendor/laravel/framework/src/Illuminate/Foundation/Application.php</code>的第836行（关于文件和行的信息都是基本我现在使用的 Laravel 5.2.31，版本号不同具体位置也可能不同）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Application.php</div><div class="line"></div><div class="line">/**</div><div class="line"> * Get the path to the configuration cache file.</div><div class="line"> *</div><div class="line"> * @return string</div><div class="line"> */</div><div class="line">public function getCachedConfigPath()</div><div class="line">&#123;</div><div class="line">    return $this-&gt;bootstrapPath().&apos;/cache/config.php&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>getCachedConfigPath()</code>函数返回了这个配置缓存文件的路径。继续查找这个函数，发现除了控制台部分外共有两个地方使用了这个函数，分别是<code>Illuminate\Foundation\Bootstrap\LoadConfiguration::LoadConfiguration和Illuminate\Foundation\Application::configurationIsCached</code>。前者是判断如果配置缓存文件存在就包含它，并不再从<code>config</code>文件夹下加载配置文件；后者是定义了一个<code>configurationIsCached()</code>函数用于返回配置缓存文件是否存在。</p>
<p>根据线索继续查找<code>configurationIsCached()</code>函数，找到了唯一的调用方：<code>vendor/laravel/framework/src/Illuminate/Foundation/Bootstrap/DetectEnvironment.php</code>的第19行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">DetectEnvironment.php</div><div class="line"></div><div class="line">class DetectEnvironment</div><div class="line">&#123;</div><div class="line">    /**</div><div class="line">     * Bootstrap the given application.</div><div class="line">     *</div><div class="line">     * @param  \Illuminate\Contracts\Foundation\Application  $app</div><div class="line">     * @return void</div><div class="line">     */</div><div class="line">    public function bootstrap(Application $app)</div><div class="line">    &#123;</div><div class="line">        if (! $app-&gt;configurationIsCached()) &#123;</div><div class="line">            $this-&gt;checkForSpecificEnvironmentFile($app);</div><div class="line">            try &#123;</div><div class="line">                (new Dotenv($app-&gt;environmentPath(), $app-&gt;environmentFile()))-&gt;load();</div><div class="line">            &#125; catch (InvalidPathException $e) &#123;</div><div class="line">                //</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    // ......</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在<code>bootstrap()</code>中可以看到，这里会检查配置缓存文件是否存在，如果不存在就会去加载<code>.env</code>文件，否则就什么都不做。正好验证了前面的猜测：在生成配置缓存之后就不会去加载<code>.env</code>文件了。</p>
<p>（通过上面代码中的<code>$this-&gt;checkForSpecificEnvironmentFile($app);</code>往下跟踪，发现还可以使用<code>.env.APP_ENV</code>的方式定义跟随环境的配置信息，例如<code>.env</code>中如果定义了<code>APP_ENV=local</code>的话，在加载环境变量时也会尝试加载<code>.env.local</code>文件）。</p>
<h2 id="env应该什么时候被加载？"><a href="#env应该什么时候被加载？" class="headerlink" title=".env应该什么时候被加载？"></a>.env应该什么时候被加载？</h2><p>至此应该是真相大白了。那么<code>.env</code>应该什么时候被加载呢？</p>
<p>当然开发环境中不需要生成配置缓存，所以每次请求都会重新加载和解析<code>.env</code>文件并设置到<code>$_ENV</code>超全局变量中。生产环境中呢？</p>
<p>这时另一个猜想产生了：既然<code>bootstrap/cache/config.php</code>缓存文件中没有关于环境变量的信息，并且系统没有尝试加载<code>.env</code>文件，会不会有可能是已经把环境变量保存到了<code>config.php</code>缓存文件中了呢？如果真的是这样的话，那么<code>env()</code>函数就只能在<code>config/*.php</code>中的配置文件里面被调用（因为生成了配置缓存后就不再加载环境变量，程序的其它地方再去访问环境变量是得不到<code>.env</code>里面的信息的）。</p>
<p>全局搜索<code>env</code>(，猜对了，果然只在<code>config</code>文件夹里面的文件中使用这个函数，其它地方是没有调用过的。</p>
<p>综合整理一下上面的过程，也就是说如果在<code>.env</code>里面自定义了一个环境变量，就需要在<code>config</code>文件夹下的任意一个配置文件中把这个环境变量添加进去，这样生成的配置缓存中才会包含这个信息。</p>
<h2 id="环境变量的正确用法"><a href="#环境变量的正确用法" class="headerlink" title="环境变量的正确用法"></a>环境变量的正确用法</h2><p>好吧，只能说明是我认为是正确的用法。</p>
<p>首先肯定是要在自己的<code>.env</code>文件中定义这个环境变量：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.env</div><div class="line"></div><div class="line">APP_BASE_URL=test.com</div></pre></td></tr></table></figure>
<p>然后还需要把这个环境变量的定义写到<code>.env.example</code>文件中，以方便团队协作时其他成员能更好的理解你定义的这个变量。</p>
<p>然后很重要的一步，你还需要把这个环境变量写到配置文件中去。因为生成配置缓存时加载配置文件的过程是遍历整个<code>config</code>文件夹，所以你可以在<code>config</code>文件中任意新建一个PHP文件用来保存自己定义的环境变量，或者修改现有的任一配置文件。</p>
<p>就以新建配置文件为例吧，在<code>config</code>文件夹下新建<code>demo.php</code>文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">demo.php</div><div class="line"></div><div class="line">&lt;?php</div><div class="line">return [</div><div class="line">	&apos;app_base_url&apos;  =&gt; env(&apos;APP_BASE_URL&apos;, &apos;default value&apos;),</div><div class="line">];</div></pre></td></tr></table></figure>
<p>是的，我们是在这个配置文件中调用的<code>env()</code>函数。这样在生成配置缓存时就会在这里读取环境变量。</p>
<p>命令行执行；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan config:cache</div></pre></td></tr></table></figure>
<p>然后再打开<code>bootstrap/cache/config.php</code>文件，会发现其中多了一部分:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">config.php</div><div class="line"></div><div class="line">//.......</div><div class="line">&apos;demo&apos; =&gt; array(</div><div class="line">    	&apos;app_base_url&apos;  =&gt; &apos;test.com&apos;,</div><div class="line">	),</div></pre></td></tr></table></figure>
<p>至此自定义环境变量的过程已经圆满结束。当然因为使用了配置缓存，所以在程序中需要读取自定义环境变量的时候也就不能使用<code>env()</code>函数。内容存储在配置中，自然要用<code>config()</code>函数。</p>
<p>上面的例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">route.php</div><div class="line"></div><div class="line">$_app_base_url = config(&apos;demo.app_base_url&apos;);</div><div class="line">Route::group([&apos;domain&apos; =&gt; &quot;u.&#123;$_app_base_url&#125;&quot;], function() &#123;</div><div class="line">    Route::get(&apos;/&apos;, function()&#123;</div><div class="line">        return &quot;TEST&quot;;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><code>config()</code>函数使用点号作为分隔符，点号前面部分是配置文件名（例子中配置文件是<code>demo.php</code>，所以是<code>demo</code>），点号后面是配置项的键名（<code>app_base_url</code>）。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总结就是如果你想同时使用自定义环境变量和配置缓存的话，你就需要自定义一个配置项来读取环境变量的值。</p>
<p>最后记得不要忘了把创建配置缓存命令写到你的构建脚本或自动部署中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;!--excerpt--&gt;
&lt;p&gt;Laravel 5 中提供了一种通过&lt;code&gt;.env&lt;/code&gt;文件定义环境变量的方式，根据官方文档的说明应该在不同的环境下使用不同的&lt;code&gt;.env&lt;/code&gt;文件，并且此文件不应该提交到版本控制中去。如此设定自然是为了方便不同的
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="Laravel" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/Laravel/"/>
    
    
      <category term="laravel" scheme="http://blog.jiangnan.pw/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Laravel5导入自定义函数和类的方法</title>
    <link href="http://blog.jiangnan.pw/2016/12/01/Laravel5%E5%AF%BC%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E5%92%8C%E7%B1%BB%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.jiangnan.pw/2016/12/01/Laravel5导入自定义函数和类的方法/</id>
    <published>2016-12-01T07:19:55.000Z</published>
    <updated>2017-01-19T08:20:11.285Z</updated>
    
    <content type="html"><![CDATA[<p>我们的应用里经常会有一些全局都可能会用的函数，我们应该怎么放置它会比较好呢？以下有一种推荐的方式：<br><!--excerpt--></p>
<h2 id="导入自定义函数"><a href="#导入自定义函数" class="headerlink" title="导入自定义函数"></a>导入自定义函数</h2><p>我们的应用里经常会有一些全局都可能会用的函数，我们应该怎么放置它会比较好呢？以下有一种推荐的方式：</p>
<ol>
<li>创建文件 <code>app/helpers.php</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">// 示例函数</div><div class="line">function foo() &#123;</div><div class="line">    return &quot;foo&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>修改项目 <code>composer.json</code></li>
</ol>
<p>在项目 composer.json 中 autoload 部分里的 files 字段加入该文件即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    ...</div><div class="line"></div><div class="line">    &quot;autoload&quot;: &#123;</div><div class="line">        &quot;files&quot;: [</div><div class="line">            &quot;app/helpers.php&quot;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后运行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer dump-autoload</div></pre></td></tr></table></figure></p>
<p>OK，然后你就可以在任何地方用到 <code>app/helpers.php</code> 中的函数了。</p>
<h2 id="导入自定义类"><a href="#导入自定义类" class="headerlink" title="导入自定义类"></a>导入自定义类</h2><p>比如说我要加载一个名字是BaiduPCS.php类文件</p>
<p>修改项目 <code>composer.json</code></p>
<p>在项目 composer.json 中 autoload 部分里的 classmap 字段加入该文件所在的文件夹即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&quot;autoload&quot;: &#123;</div><div class="line">    &quot;classmap&quot;: [</div><div class="line">        &quot;database&quot;,</div><div class="line">        &quot;app/DDL/Classes&quot;  &lt;== 就是这里</div><div class="line">    ],</div><div class="line">    &quot;files&quot;: [</div><div class="line">        &quot;app/DDL/Functions/functions.php&quot;</div><div class="line">    ],</div><div class="line">    &quot;psr-4&quot;: &#123;</div><div class="line">        &quot;App\\&quot;: &quot;app/&quot;,</div><div class="line">        &quot;DDL\\&quot;:&quot;app/DDL/&quot;</div><div class="line">    &#125;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>然后运行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer dump-autoload</div></pre></td></tr></table></figure></p>
<p>OK，然后你就可以在你要使用该类的地方添加以下代码来使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use BaiduPCS;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们的应用里经常会有一些全局都可能会用的函数，我们应该怎么放置它会比较好呢？以下有一种推荐的方式：&lt;br&gt;&lt;!--excerpt--&gt;&lt;/p&gt;
&lt;h2 id=&quot;导入自定义函数&quot;&gt;&lt;a href=&quot;#导入自定义函数&quot; class=&quot;headerlink&quot; title=&quot;导入自
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="Laravel" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/Laravel/"/>
    
    
      <category term="laravel" scheme="http://blog.jiangnan.pw/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>常用图床及自建图床方法汇总</title>
    <link href="http://blog.jiangnan.pw/2016/11/10/%E5%B8%B8%E7%94%A8%E5%9B%BE%E5%BA%8A%E5%8F%8A%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <id>http://blog.jiangnan.pw/2016/11/10/常用图床及自建图床方法汇总/</id>
    <published>2016-11-10T06:28:41.000Z</published>
    <updated>2017-01-19T08:21:36.733Z</updated>
    
    <content type="html"><![CDATA[<p>国内图床的中流砥柱，速度非常快，服务也较为稳定，目前还支持了 HTTPS ，同时有大量的第三方工具……<br><!--excerpt--></p>
<h2 id="公共图床"><a href="#公共图床" class="headerlink" title="公共图床"></a>公共图床</h2><h3 id="微博图床"><a href="#微博图床" class="headerlink" title="微博图床"></a>微博图床</h3><p>国内图床的中流砥柱，速度非常快，服务也较为稳定，目前还支持了 HTTPS ，同时有大量的第三方工具方便使用，缺点是批量上传比较麻烦。</p>
<ul>
<li><a href="http://photo.weibo.com/photos/upload" target="_blank" rel="external">官方上传地址</a></li>
<li><a href="https://chrome.google.com/webstore/detail/%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/fdfdnfpdplfbbnemmmoklbfjbhecpnhf/related" target="_blank" rel="external">新浪微博图床 Chrome 插件</a></li>
<li><a href="https://chrome.google.com/webstore/detail/%E5%9B%B4%E8%84%96%E6%98%AF%E4%B8%AA%E5%A5%BD%E5%9B%BE%E5%BA%8A/pngmcllbdfgmhdgnnpfaciaolgbjplhe/related?hl=zh-CN" target="_blank" rel="external">围脖图床 Chrome 插件（网页版不可用，Firefox 版在附加组件中搜索安装即可）</a></li>
</ul>
<h3 id="imgur"><a href="#imgur" class="headerlink" title="imgur"></a>imgur</h3><p>09年就成立了的国外老牌图床，支持https，理论上不限制大小，还有邮件发图、视频转 GIF 、URL 上传等功能，很强大，可惜间歇性被墙，就算没被墙国内访问也很慢，面向国外的站点使用倒很合适。</p>
<p>地址：<a href="https://imgur.com/" target="_blank" rel="external">https://imgur.com</a></p>
<h3 id="sm-ms"><a href="#sm-ms" class="headerlink" title="sm.ms"></a>sm.ms</h3><p>支持https，有 API ，图片要求大小在 5MB 以下，一次上传不得超过10张，维护者是 <a href="https://ttt.tt/" target="_blank" rel="external">通天塔</a> 的站长。主站 <a href="https://sm.ms/" target="_blank" rel="external">https://sm.ms</a> 目前用的是阿里云新加坡的机器，而上传的图片则会被存储到使用阿里云香港的 <a href="https://ooo.0o0.ooo/" target="_blank" rel="external">https://ooo.0o0.ooo</a> 中，因此速度还是很不错的。<a id="more"></a></p>
<p>地址：<a href="https://sm.ms/" target="_blank" rel="external">https://sm.ms</a></p>
<p>API：<a href="https://sm.ms/doc/" target="_blank" rel="external">https://sm.ms/doc/</a></p>
<h3 id="otar-im"><a href="#otar-im" class="headerlink" title="otar.im"></a>otar.im</h3><p>这个网站本身并不是一个图床，但却做到了一个更比三个强，整合上文提到的微博图床、imgur、sm.ms 到一个页面中，非常方便实用。然而最近使用时提示未知错误上传失败，不知是否停止维护了。</p>
<p>地址：<a href="http://upload.otar.im/" target="_blank" rel="external">http://upload.otar.im/</a></p>
<h3 id="V2EX-图片库"><a href="#V2EX-图片库" class="headerlink" title="V2EX 图片库"></a>V2EX 图片库</h3><p>程序员社区 v2ex 推出的付费图床服务，由于博主没有需求所以未付费使用过，效果不明。</p>
<p>地址：<a href="https://www.v2ex.com/i/about" target="_blank" rel="external">https://www.v2ex.com/i/about</a></p>
<h3 id="LightPic"><a href="#LightPic" class="headerlink" title="LightPic"></a>LightPic</h3><p>使用其自己开发的系统，站点规则中写明了不保证图片可以永久存储，似乎使用了 CloudFlare 非中国版的 CDN ，因此支持 https ，但是 CF 在国内部分地区的访问效果很堪忧。</p>
<p>地址：<a href="https://lightpic.info/" target="_blank" rel="external">https://lightpic.info</a></p>
<h3 id="picwindow"><a href="#picwindow" class="headerlink" title="picwindow"></a>picwindow</h3><p>国外图床，号称长久而稳定的储存，图片要求大小在 10MB 以下，国内访问速度一般但可以接受，缺点是上传时有些慢，且不支持 HTTPS ，不过他的远程上传（其实也就是通过 URL 直接上床图片）的功能还是很好用的。</p>
<p>地址：<a href="http://www.picwindow.com/" target="_blank" rel="external">http://www.picwindow.com/</a></p>
<h3 id="贴图库"><a href="#贴图库" class="headerlink" title="贴图库"></a>贴图库</h3><p>早年的神级图床，可惜后来因为某种原因关停，恢复后暂时使用了 kekaoyun 这个域名，现在已经切换回了原域名，但是也从关停前的永久免费变为了6个月免费，也就是免费存储的图片只保存六个月，并提供了付费的商业选项。速度没得说，但是不适合博客这样的站点使用。</p>
<p>地址：<a href="http://www.tietuku.com/" target="_blank" rel="external">http://www.tietuku.com/</a></p>
<p>费用详情：<a href="http://www.tietuku.com/open" target="_blank" rel="external">http://www.tietuku.com/open</a></p>
<h3 id="萝莉图床"><a href="#萝莉图床" class="headerlink" title="萝莉图床"></a>萝莉图床</h3><p>也是早年一个很好用的图床，但是现在需要邀请注册才能使用。</p>
<p>地址：<a href="http://loli.io/" target="_blank" rel="external">http://loli.io/</a></p>
<h2 id="自建图床"><a href="#自建图床" class="headerlink" title="自建图床"></a>自建图床</h2><h3 id="七牛、又拍云等云存储"><a href="#七牛、又拍云等云存储" class="headerlink" title="七牛、又拍云等云存储"></a>七牛、又拍云等云存储</h3><p>这些服务商其实是做 CDN 和云存储的，但是由于有一定的免费存储及流量额度，所以也有很多人拿来做自己博客的图床，速度可以和微博图床媲美，各种以其为基础开发的第三方工具用起来也很顺手，缺点是大部分都不支持 https ，同时注册时要求上传身份证信息挺麻烦的。下面推荐几个具有代表性的服务商及第三方工具：</p>
<p>服务商：</p>
<ul>
<li>七牛：<a href="http://www.qiniu.com/" target="_blank" rel="external">http://www.qiniu.com/</a></li>
<li>又拍云：<a href="https://www.upyun.com/index.html" target="_blank" rel="external">https://www.upyun.com/index.html</a></li>
</ul>
<p>工具：</p>
<ul>
<li>iPic (Mac only)：<a href="http://i.toolinbox.net/iPic/iPicUploader.html" target="_blank" rel="external">http://i.toolinbox.net/iPic/iPicUploader.html</a></li>
<li>yotuku：<a href="http://yotuku.cn/" target="_blank" rel="external">http://yotuku.cn/</a></li>
<li>PHP版七牛图床：<a href="https://github.com/4679/qiniu-picbed" target="_blank" rel="external">https://github.com/4679/qiniu-picbed</a></li>
<li>Get Link：<a href="https://github.com/int64ago/getlink" target="_blank" rel="external">https://github.com/int64ago/getlink</a></li>
</ul>
<h3 id="树洞外链"><a href="#树洞外链" class="headerlink" title="树洞外链"></a>树洞外链</h3><blockquote>
<p>树洞外链是一款免费开源的PHP外链网盘系统，界面简洁友好，支持七牛、本地、远程、阿里云OSS、又拍云五种储存方式，支持多用户系统，多上传方案策略。</p>
</blockquote>
<p>官方给出了这样的说明，实际使用下来也确实不错，有文档、安装方便也比较稳定，但存在着一些小 Bug ，小站点用来自建图床还是很合适的。</p>
<p>官网：<a href="https://yun.aoaoao.me/" target="_blank" rel="external">https://yun.aoaoao.me/</a></p>
<p>Github：<a href="https://github.com/HFO4/shudong-share" target="_blank" rel="external">https://github.com/HFO4/shudong-share</a></p>
<h3 id="Lychee"><a href="#Lychee" class="headerlink" title="Lychee"></a>Lychee</h3><p>一款开源的图片管理系统，实际上也可以用作图床，一直在更新，自身功能很强大，还支持二次开发插件及扩展来丰富功能，此外这套系统也支持 Docker 。</p>
<p>GIthub：<a href="https://github.com/electerious/Lychee" target="_blank" rel="external">https://github.com/electerious/Lychee</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;国内图床的中流砥柱，速度非常快，服务也较为稳定，目前还支持了 HTTPS ，同时有大量的第三方工具……&lt;br&gt;&lt;!--excerpt--&gt;&lt;/p&gt;
&lt;h2 id=&quot;公共图床&quot;&gt;&lt;a href=&quot;#公共图床&quot; class=&quot;headerlink&quot; title=&quot;公共图床&quot;&gt;&lt;
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="开源" scheme="http://blog.jiangnan.pw/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="图床" scheme="http://blog.jiangnan.pw/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>MacOSX10.11开启任意显示器HiDPI方法</title>
    <link href="http://blog.jiangnan.pw/2016/11/08/MacOSX10-11%E5%BC%80%E5%90%AF%E4%BB%BB%E6%84%8F%E6%98%BE%E7%A4%BA%E5%99%A8HiDPI%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.jiangnan.pw/2016/11/08/MacOSX10-11开启任意显示器HiDPI方法/</id>
    <published>2016-11-08T05:27:16.000Z</published>
    <updated>2017-01-06T12:47:13.410Z</updated>
    
    <content type="html"><![CDATA[<p>MacOSX10.11开启任意显示器HiDPI方法<br><!--excerpt--></p>
<blockquote>
<p>研究了下，其实没怎么变化。Overrides文件夹目录位置变了而已。<br>本人开启HiDPI现在更主要是为了截图截出2x的效果，实际调整分辨率的是另一个小显示器~已经很久用不到HiDPI的真实意义啦</p>
</blockquote>
<h2 id="对于权限问题的补充"><a href="#对于权限问题的补充" class="headerlink" title="对于权限问题的补充"></a>对于权限问题的补充</h2><p>10.11系统权限设置又改动，一些系统文件只有“系统”有权限读写，首先要关闭这个权限：<br>开机按住 <strong>command ＋ R</strong>，进入恢复模式，然后在“终端”中输入“csrutil disable”关闭权限。如果需要打开，则csrutil enable。<br>这是在知乎上看到相同的问题，别人提到的。LZ好像没遇到过这种情况，如果有人遇到同样的权限问题，这样解决就好了。</p>
<h3 id="对于权限问题的补充-1"><a href="#对于权限问题的补充-1" class="headerlink" title="对于权限问题的补充"></a>对于权限问题的补充</h3><ol>
<li><p>开启HiDPI<br>打开终端 键入<br>sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool YES<br>回车后，输入当前系统管理员的密码，继续回车确认。</p>
</li>
<li><p>获取你的显示器的两个 ID:<br>DisplayVendorID和DisplayProductID<br>打开终端, 命令分别是:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ioreg -l | grep &quot;DisplayVendorID&quot;</div><div class="line">ioreg -l | grep &quot;DisplayProductID&quot;</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>OK.在桌面上新建一个文件夹,名字格式是:DisplayVendorID-XXXX,其中XXXX是你的DisplayVendorID的16进制值小写.<br>于是,我会新建一个 DisplayVendorID-XXXX的文件夹,然后在这个文件夹里面新建一个空白文件.名字格式是<br>DisplayProductID-YYYY,自然YYYY就是你的DisplayProductID的16进制了.<br>我新建的文件是 DisplayProductID-YYYY.<br>最好下载我提供的模板编辑.<br>相信你不一定能找到个合适的进制转换工具，我从网上找到了一个很好用的flash，并把它放到了自己的服务器里，<br>大家如有需要随时可以去用<br>在线进制转换器<br>建议使用PlistPro工具编辑，方便快捷。.<br><strong>范例:</strong></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>DisplayProductID<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">integer</span>&gt;</span>10496<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>DisplayVendorID<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">integer</span>&gt;</span>8547<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>scale-resolutions<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAKAAAABkAAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAUAAAADIAAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAKAAAABDgAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAUAAAACHAAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAHgAAABDgAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAPAAAACHAAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAGkAAABBoAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAANIAAACDQAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAGQAAAA4QAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAMgAAABwgAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAFoAAAA4QAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAALQAAABwgAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAINAAAA4QAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">                AAAQaAAABwgAAAABACAAAA==</div><div class="line">                <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></div></pre></td></tr></table></figure>
<p>建议下载本帖子中的附件。包含本范例。</p>
<p>最后面那一坨,和以及里面的data如何来的<br>比如我想使用1600900这个HiDPI,那么我就需要生成两个分辨率,其中一个是1600900,一个是其双倍,3200*1800.<br>1600,900两个值的16进制是00000640 00000384 ;<br>3200,1800两个值的16进制是00000C80 00000708;<br>后面加上 00000001 00200000<br>于是会得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">00000640 00000384 00000001 00200000</div><div class="line">00000C80 00000708 00000001 00200000</div></pre></td></tr></table></figure></p>
<p>用附件中的PlistPro编辑这个DisplayProductID-YYYY,计算并填写你想要的分辨率.<br>最后,把这个 DisplayVendorID-XXXX 文件夹,</p>
<p>拷贝到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/System/Library/Displays/Contents/Resources/Overrides/</div></pre></td></tr></table></figure></p>
<p>(10.10及以下是 /System/Library/Displays/Overrides/ )<br>重启系统就可以看到了.可以安装RDM切换,在任务栏,方便快捷.<br>各位可以根据自己的屏幕规格来添加.</p>
<p>范例中，设定的分辨率是<br>2560x1600 2x (16:10)<br>2560x1080 2x (21:9)<br>1920x1080 2x (16:9)<br>1680x1050 2x (16:10)<br>1600x900 2x(16:9)<br>1440x900 2x(16:10)<br>2100x900 2x(21:9)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MacOSX10.11开启任意显示器HiDPI方法&lt;br&gt;&lt;!--excerpt--&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;研究了下，其实没怎么变化。Overrides文件夹目录位置变了而已。&lt;br&gt;本人开启HiDPI现在更主要是为了截图截出2x的效果，实际调整分辨率的
    
    </summary>
    
      <category term="Mac" scheme="http://blog.jiangnan.pw/categories/Mac/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/categories/Mac/Mac%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/tags/Mac%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>禁止WordPress头部加载s.w.org</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/%E7%A6%81%E6%AD%A2WordPress%E5%A4%B4%E9%83%A8%E5%8A%A0%E8%BD%BDs-w-org/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/禁止WordPress头部加载s-w-org/</id>
    <published>2016-10-17T05:49:24.000Z</published>
    <updated>2017-01-19T08:14:09.817Z</updated>
    
    <content type="html"><![CDATA[<p>WordPress在头部添加dns-prefetch，应该是为了从s.w.org预获取表情和头像，目的是提高网页加载速度 ，但s.w.org国内根本无法访问，什么预获取、什么提高速度，都是泡影，不仅没用处，反而可能会影响速度，那就禁止它。<br><!-- excerpt --><br><img src="https://dl.dropbox.com/s/5et1y0kkomei4wx/wordpress1.jpg?dl=0" alt="wordpress"></p>
<p>升级到WordPress 4.6之后，有童鞋发现头部加载了一个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=&apos;dns-prefetch&apos; href=&apos;//s.w.org&apos;&gt;</div></pre></td></tr></table></figure></p>
<p>WordPress在头部添加dns-prefetch，应该是为了从s.w.org预获取表情和头像，目的是提高网页加载速度 ，但s.w.org国内根本无法访问，什么预获取、什么提高速度，都是泡影，不仅没用处，反而可能会影响速度，那就禁止它。</p>
<h2 id="将下面的代码添加到主题functions-php模板中："><a href="#将下面的代码添加到主题functions-php模板中：" class="headerlink" title="将下面的代码添加到主题functions.php模板中："></a>将下面的代码添加到主题functions.php模板中：</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">remove_action( &apos;wp_head&apos;, &apos;wp_resource_hints&apos;, 2 );</div></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function remove_dns_prefetch( $hints, $relation_type ) &#123;</div><div class="line">if ( &apos;dns-prefetch&apos; === $relation_type ) &#123;</div><div class="line">return array_diff( wp_dependencies_unique_hosts(), $hints );</div><div class="line">&#125;</div><div class="line">return $hints;</div><div class="line">&#125;</div><div class="line">add_filter( &apos;wp_resource_hints&apos;, &apos;remove_dns_prefetch&apos;, 10, 2 );</div></pre></td></tr></table></figure>
<p>方法二貌似兼容性更好些。<br>附带一个禁止加载表情代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// Remove emoji script</div><div class="line">remove_action( &apos;wp_head&apos;, &apos;print_emoji_detection_script&apos;, 7 );</div><div class="line">remove_action( &apos;wp_print_styles&apos;, &apos;print_emoji_styles&apos; );</div><div class="line">add_filter( &apos;emoji_svg_url&apos;, &apos;__return_false&apos; );</div></pre></td></tr></table></figure></p>
<p>参考：<a href="https://wordpress.org/support/topic/remove-the-new-dns-prefetch-code/" target="_blank" rel="external">https://wordpress.org/support/topic/remove-the-new-dns-prefetch-code/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress在头部添加dns-prefetch，应该是为了从s.w.org预获取表情和头像，目的是提高网页加载速度 ，但s.w.org国内根本无法访问，什么预获取、什么提高速度，都是泡影，不仅没用处，反而可能会影响速度，那就禁止它。&lt;br&gt;&lt;!-- excerpt -
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 后台文件管理插件：FileBrowser</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/WordPress-%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%8F%92%E4%BB%B6%EF%BC%9AFileBrowser/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/WordPress-后台文件管理插件：FileBrowser/</id>
    <published>2016-10-17T05:05:54.000Z</published>
    <updated>2017-01-19T08:14:57.061Z</updated>
    
    <content type="html"><![CDATA[<p>WordPress 后台文件管理插件：FileBrowser<br><!-- excerpt --><br><img src="https://dl.dropbox.com/s/ju6fp7yj13acoms/wordpress.jpg?dl=0" alt="wordpress"></p>
<p>WordPress 后台文件管理插件：FileBrowser</p>
<p>wordpress本身没有像dedecms那样的在线文件管理功能，一般的文件管理都得通过FTP来实现，把文件下载下来，然后再编辑上传，很麻烦，而且有的空间根本不支持FTP，所以我们可以使用wordpress后台文件管理插件：FileBrowser。</p>
<p><a href="https://wordpress.org/plugins/filebrowser/" target="_blank" rel="external">原版下载地址</a><br><a href="http://pan.baidu.com/share/link?shareid=374434&amp;uk=757737247" target="_blank" rel="external">汉化版下载地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress 后台文件管理插件：FileBrowser&lt;br&gt;&lt;!-- excerpt --&gt;&lt;br&gt;&lt;img src=&quot;https://dl.dropbox.com/s/ju6fp7yj13acoms/wordpress.jpg?dl=0&quot; alt=&quot;wordpre
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="plugins" scheme="http://blog.jiangnan.pw/tags/plugins/"/>
    
  </entry>
  
  <entry>
    <title>获取WordPress当前分类文章所有标签</title>
    <link href="http://blog.jiangnan.pw/2016/10/17/%E8%8E%B7%E5%8F%96WordPress%E5%BD%93%E5%89%8D%E5%88%86%E7%B1%BB%E6%96%87%E7%AB%A0%E6%89%80%E6%9C%89%E6%A0%87%E7%AD%BE/"/>
    <id>http://blog.jiangnan.pw/2016/10/17/获取WordPress当前分类文章所有标签/</id>
    <published>2016-10-17T04:25:16.000Z</published>
    <updated>2017-01-19T08:14:30.073Z</updated>
    
    <content type="html"><![CDATA[<p>如果需要在分类列表页面，显示当前分类文章中添加的所有标签，方便读者阅读自己喜欢的内容，下面的代码可以帮你实现这个功能。<br>获取WordPress当前分类文章所有标签<br><a id="more"></a></p>
<p>首先，在主题functions.php模板文件中添加以下函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">function get_category_tags($args) &#123;</div><div class="line">    global $wpdb;</div><div class="line">    $tags = $wpdb-&gt;get_results</div><div class="line">    (&quot;</div><div class="line">        SELECT DISTINCT terms2.term_id as tag_id, terms2.name as tag_name</div><div class="line">        FROM</div><div class="line">            $wpdb-&gt;posts as p1</div><div class="line">            LEFT JOIN $wpdb-&gt;term_relationships as r1 ON p1.ID = r1.object_ID</div><div class="line">            LEFT JOIN $wpdb-&gt;term_taxonomy as t1 ON r1.term_taxonomy_id = t1.term_taxonomy_id</div><div class="line">            LEFT JOIN $wpdb-&gt;terms as terms1 ON t1.term_id = terms1.term_id,</div><div class="line">            $wpdb-&gt;posts as p2</div><div class="line">            LEFT JOIN $wpdb-&gt;term_relationships as r2 ON p2.ID = r2.object_ID</div><div class="line">            LEFT JOIN $wpdb-&gt;term_taxonomy as t2 ON r2.term_taxonomy_id = t2.term_taxonomy_id</div><div class="line">            LEFT JOIN $wpdb-&gt;terms as terms2 ON t2.term_id = terms2.term_id</div><div class="line">        WHERE</div><div class="line">            t1.taxonomy = &apos;category&apos; AND p1.post_status = &apos;publish&apos; AND terms1.term_id IN (&quot;.$args[&apos;categories&apos;].&quot;) AND</div><div class="line">            t2.taxonomy = &apos;post_tag&apos; AND p2.post_status = &apos;publish&apos;</div><div class="line">            AND p1.ID = p2.ID</div><div class="line">        ORDER by tag_name</div><div class="line">    &quot;);</div><div class="line">    $count = 0;</div><div class="line">    if($tags) &#123;</div><div class="line">        foreach ($tags as $tag) &#123;</div><div class="line">            $mytag[$count] = get_term_by(&apos;id&apos;, $tag-&gt;tag_id, &apos;post_tag&apos;);</div><div class="line">            $count++;</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">      $mytag = NULL;</div><div class="line">    &#125;</div><div class="line">    return $mytag;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译：<a href="http://www.ludou.org/wordpress-get-tags-specific-to-category.html" target="_blank" rel="external">http://www.ludou.org/wordpress-get-tags-specific-to-category.html</a><br>源代码出自：<a href="https://wordpress.org/support/topic/get-tags-specific-to-category" target="_blank" rel="external">https://wordpress.org/support/topic/get-tags-specific-to-category</a></p>
<p>其次，将下面调用输出代码，添加到主题archive.php模板适当位置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    $cat= single_cat_title(&apos;&apos;, false);</div><div class="line">    $args = array( &apos;categories&apos; =&gt; get_cat_ID($cat));</div><div class="line">    $tags = get_category_tags($args);</div><div class="line">    $content .= &quot;&lt;ul class=&apos;cat-tag&apos;&gt;&quot;;</div><div class="line">    if(!empty($tags)) &#123;</div><div class="line">        foreach ($tags as $tag) &#123;</div><div class="line">            $content .= &quot;&lt;li&gt;&lt;a href=\&quot;&quot;.get_tag_link($tag-&gt;term_id).&quot;\&quot;&gt;&quot;.$tag-&gt;name.&quot;&lt;/a&gt;&lt;/li&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    $content .= &quot;&lt;/ul&gt;&quot;;</div><div class="line">    echo $content;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>个人感觉放到头部调用函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php get_header(); ?&gt;</div></pre></td></tr></table></figure></p>
<p>下面比较合适。<br>最后，再适当加上样式即可：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.cat-tag</span>&#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.cat-tag</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果需要在分类列表页面，显示当前分类文章中添加的所有标签，方便读者阅读自己喜欢的内容，下面的代码可以帮你实现这个功能。&lt;br&gt;获取WordPress当前分类文章所有标签&lt;br&gt;
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Alfred实现七牛上传文件</title>
    <link href="http://blog.jiangnan.pw/2016/10/16/Alfred%E5%AE%9E%E7%8E%B0%E4%B8%83%E7%89%9B%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://blog.jiangnan.pw/2016/10/16/Alfred实现七牛上传文件/</id>
    <published>2016-10-16T00:48:27.000Z</published>
    <updated>2017-01-10T06:58:08.874Z</updated>
    
    <content type="html"><![CDATA[<p>alfred-workflow-qshell<br>qshell 是基于七牛API参考手册实现的一个方便开发者测试和使用七牛API服务的命令行工具。<br><!--excerpt--></p>
<h2 id="alfred-workflow-qshell"><a href="#alfred-workflow-qshell" class="headerlink" title="alfred-workflow-qshell"></a>alfred-workflow-qshell</h2><blockquote>
<p>qshell 是基于七牛API参考手册实现的一个方便开发者测试和使用七牛API服务的命令行工具。</p>
</blockquote>
<p>alfred-workflow-qshell 是一个配合七牛开发者工具 <a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">qshell</a> 使用的 Alfred workflow。</p>
<p>alfred-workflow-qshell 使用可视化流程后台执行 <code>qshell</code> 命令行，易用高效。</p>
<h2 id="功能-amp-特点"><a href="#功能-amp-特点" class="headerlink" title="功能 &amp; 特点"></a>功能 &amp; 特点</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li>支持多文件上传</li>
<li>支持上传文件添加前缀</li>
<li>获取空间文件外链</li>
<li>查看空间文件基本信息</li>
<li>移动、复制、删除、重命名</li>
<li>预览、下载空间文件</li>
<li>完善的文件操作反馈（通知、错误等）</li>
</ul>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul>
<li>curl 下载文件</li>
<li>不支持文件夹上传<br>要求空间的文件名为不能为空或全为空格</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><ul>
<li>默认关键字 <code>fput</code> 搜索本地单个文件，上传文件</li>
<li>搜索文件时使用 <strong>Buffer</strong> 功能进行文件多选，上传多文件（<a href="https://github.com/onestark/better-series/blob/master/better-workflow.md" target="_blank" rel="external">Buffer 的使用</a>）</li>
<li>选中一或多个文件，调出 <strong>Actions</strong> 文件操作菜单，上传文件</li>
</ul>
<h3 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h3><ul>
<li>默认关键字 <code>fstat</code> 搜索空间文件</li>
<li>移动、复制、删除、重命名、外链、信息、预览、下载</li>
</ul>
<h2 id="安装-amp-配置"><a href="#安装-amp-配置" class="headerlink" title="安装 &amp; 配置"></a>安装 &amp; 配置</h2><p>要求：<strong>qshell</strong>、<strong>Alfred with Powerpack</strong></p>
<h3 id="1-qshell"><a href="#1-qshell" class="headerlink" title="1. qshell"></a>1. <a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">qshell</a></h3><p>或前往 <a href="https://github.com/qiniu/qshell" target="_blank" rel="external">GitHub</a></p>
<p>安装：只需要下载 zip 包之后解压即可使用。Mac 64 位系统只需要解压后的文件 <code>qshell_darwin_amd64</code>。把此文件放到 <code>/usr/local/bin</code> 目录。</p>
<p>配置：从七牛的后台的账号设置中获取 <strong>AccessKey</strong> 和 <strong>SecretKey</strong>。配置本地 qshell：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 设置密钥</div><div class="line">qshell account [AccessKey] [SecretKey]</div><div class="line"># 查看设置</div><div class="line">qshell account</div></pre></td></tr></table></figure>
<p>注意：上面的设置命令不需要输入方括号 <code>[]</code>。</p>
<p>配置 qshell 完毕后会生成 <code>~/.qshell</code> 文件夹，其中 <code>account.json</code> 文件保存了 AccessKey 和 SecretKey 信息。</p>
<h3 id="2-Alfred"><a href="#2-Alfred" class="headerlink" title="2. Alfred"></a>2. <a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a></h3><p>下载后缀名为 <code>.alfredworkflow</code> 的安装包安装即可。</p>
<p>注意：Alfred 需要购买 <a href="https://www.alfredapp.com/powerpack/buy/" target="_blank" rel="external">Powerpack</a> 才能解锁 workflows 功能。</p>
<h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><ul>
<li>[x] account，显示当前用户的 AccessKey 和 SecretKey</li>
<li>[x] fput，以文件表单的方式上传一个文件</li>
<li>[x] stat，查询七牛空间中一个文件的基本信息</li>
<li>[x] delete，删除七牛空间中的一个文件</li>
<li>[x] move，移动或重命名七牛空间中的一个文件</li>
<li>[x] copy，复制七牛空间中的一个文件</li>
<li>[x] 查新基本信息时可以获取文件外链</li>
<li>[x] 预览功能</li>
<li>[x] 下载功能</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;alfred-workflow-qshell&lt;br&gt;qshell 是基于七牛API参考手册实现的一个方便开发者测试和使用七牛API服务的命令行工具。&lt;br&gt;&lt;!--excerpt--&gt;&lt;/p&gt;
&lt;h2 id=&quot;alfred-workflow-qshell&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="Mac" scheme="http://blog.jiangnan.pw/categories/Mac/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/categories/Mac/Mac%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Alfred" scheme="http://blog.jiangnan.pw/tags/Alfred/"/>
    
      <category term="Mac技巧" scheme="http://blog.jiangnan.pw/tags/Mac%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>自动从其它站点RSS抓取文章</title>
    <link href="http://blog.jiangnan.pw/2016/10/13/%E8%87%AA%E5%8A%A8%E4%BB%8E%E5%85%B6%E5%AE%83%E7%AB%99%E7%82%B9RSS%E6%8A%93%E5%8F%96%E6%96%87%E7%AB%A0/"/>
    <id>http://blog.jiangnan.pw/2016/10/13/自动从其它站点RSS抓取文章/</id>
    <published>2016-10-13T08:17:14.000Z</published>
    <updated>2017-01-19T08:14:38.621Z</updated>
    
    <content type="html"><![CDATA[<p>代码基本原理，新建一个自定义分类法“shot”，自动从另一个站点的RSS抓取文章，放在一个数组中，再用这个数组创建“shot”文章，并为文章添加自定义栏目image和link_url，方便调用缩略图和原文链接。<br><a id="more"></a></p>
<p>将下面代码添加到当前主题functions.php中即可。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?</span></div><div class="line"><span class="comment">/* Post Type</span></div><div class="line">   ------------------------------------------------------------------------------------ */</div><div class="line">add_action( <span class="string">'init'</span>, <span class="string">'register_cpt_shot'</span> );</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">register_cpt_shot</span><span class="params">()</span> </span>&#123;</div><div class="line">    $labels = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'name'</span> =&gt; _x( <span class="string">'Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'singular_name'</span> =&gt; _x( <span class="string">'Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'add_new'</span> =&gt; _x( <span class="string">'Add New'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'add_new_item'</span> =&gt; _x( <span class="string">'Add New Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'edit_item'</span> =&gt; _x( <span class="string">'Edit Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'new_item'</span> =&gt; _x( <span class="string">'New Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'view_item'</span> =&gt; _x( <span class="string">'View Dribbble Shot'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'search_items'</span> =&gt; _x( <span class="string">'Search Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'not_found'</span> =&gt; _x( <span class="string">'No dribble shots found'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'not_found_in_trash'</span> =&gt; _x( <span class="string">'No dribble shots found in Trash'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'parent_item_colon'</span> =&gt; _x( <span class="string">'Parent Dribbble Shot:'</span>, <span class="string">'shot'</span> ),</div><div class="line">        <span class="string">'menu_name'</span> =&gt; _x( <span class="string">'Dribble Shots'</span>, <span class="string">'shot'</span> ),</div><div class="line">    );</div><div class="line">    $args = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'labels'</span> =&gt; $labels,</div><div class="line">        <span class="string">'hierarchical'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'supports'</span> =&gt; <span class="keyword">array</span>( <span class="string">'title'</span>, <span class="string">'custom-fields'</span> ),</div><div class="line">        <span class="string">'public'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_ui'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_in_menu'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'show_in_nav_menus'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'publicly_queryable'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'exclude_from_search'</span> =&gt; <span class="keyword">false</span>,</div><div class="line">        <span class="string">'has_archive'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'query_var'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'can_export'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'rewrite'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">        <span class="string">'capability_type'</span> =&gt; <span class="string">'post'</span></div><div class="line">    );</div><div class="line">    register_post_type( <span class="string">'shot'</span>, $args );</div><div class="line">&#125;</div><div class="line"><span class="comment">/* Import Shots via RSS</span></div><div class="line">   ------------------------------------------------------------------------------------ */</div><div class="line"><span class="comment">// grab the image src from teh description</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_image</span><span class="params">($string)</span> </span>&#123;</div><div class="line">    preg_match_all(<span class="string">'/&lt;img[^&gt;]+&gt;/i'</span>,$string, $result);</div><div class="line">    $img = <span class="keyword">array</span>();</div><div class="line">    <span class="keyword">foreach</span>( $result[<span class="number">0</span>] <span class="keyword">as</span> $img_tag)</div><div class="line">    &#123;</div><div class="line">        preg_match_all(<span class="string">'/(src)=("[^"]*")/i'</span>,$img_tag, $img[$img_tag]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> trim($img[$img_tag][<span class="number">2</span>][<span class="number">0</span>], <span class="string">'"'</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">// create an array of the feed items</span></div><div class="line"><span class="keyword">include_once</span>(ABSPATH . WPINC . <span class="string">'/feed.php'</span>);</div><div class="line">$feed = fetch_feed(<span class="string">'http://dribbble.com/tammyhart/shots.rss'</span>);</div><div class="line">$feed = $feed-&gt;get_items(<span class="number">0</span>);</div><div class="line">$shots = <span class="keyword">array</span>();</div><div class="line"><span class="keyword">foreach</span> ( $feed <span class="keyword">as</span> $item ) :</div><div class="line">$shots[$item-&gt;get_date(<span class="string">'Ymd'</span>)] = <span class="keyword">array</span>(</div><div class="line">    <span class="string">'id'</span>    =&gt; $item-&gt;get_date(<span class="string">'Ymd'</span>),</div><div class="line">    <span class="string">'url'</span>   =&gt; esc_url( $item-&gt;get_permalink() ),</div><div class="line">    <span class="string">'date'</span>  =&gt; $item-&gt;get_date(<span class="string">'Y-m-d H:i:s'</span>),</div><div class="line">    <span class="string">'title'</span> =&gt; esc_html( $item-&gt;get_title() ),</div><div class="line">    <span class="string">'image'</span> =&gt; get_image($item-&gt;get_description())</div><div class="line">    );</div><div class="line"><span class="keyword">endforeach</span>;</div><div class="line"><span class="comment">// create posts from our array</span></div><div class="line"><span class="keyword">foreach</span> ($shots <span class="keyword">as</span> $shot) &#123;</div><div class="line">    $shot_post = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'post_type'</span>     =&gt; <span class="string">'shot'</span>,</div><div class="line">        <span class="string">'post_status'</span>   =&gt; <span class="string">'publish'</span>,</div><div class="line">        <span class="string">'post_author'</span>   =&gt; <span class="number">1</span>,</div><div class="line">        <span class="string">'post_title'</span>    =&gt; $shot[<span class="string">'title'</span>],</div><div class="line">        <span class="string">'post_date'</span>     =&gt; $shot[<span class="string">'date'</span>]</div><div class="line">        );</div><div class="line">    $shot_post_meta = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'link_url'</span>  =&gt; $shot[<span class="string">'url'</span>],</div><div class="line">        <span class="string">'image'</span>     =&gt; $shot[<span class="string">'image'</span>]</div><div class="line">        );</div><div class="line">    $posts = get_posts(</div><div class="line">        <span class="keyword">array</span>(</div><div class="line">            <span class="string">'post_type'</span> =&gt; <span class="string">'shot'</span>,</div><div class="line">            <span class="string">'meta_key'</span>  =&gt; <span class="string">'link_url'</span>,</div><div class="line">            <span class="string">'meta_value'</span>=&gt; $shot_post_meta[<span class="string">'link_url'</span>]</div><div class="line">            )</div><div class="line">        );</div><div class="line">    <span class="keyword">if</span> (count($posts) == <span class="number">0</span>) &#123;</div><div class="line">        $post_id = wp_insert_post($shot_post);</div><div class="line">        add_post_meta($post_id, <span class="string">'link_url'</span>, $shot_post_meta[<span class="string">'link_url'</span>], <span class="keyword">true</span>);</div><div class="line">        add_post_meta($post_id, <span class="string">'image'</span>, $shot_post_meta[<span class="string">'image'</span>], <span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>修改第66行的”<a href="http://dribbble.com/tammyhart/shots.rss“为准备抓取文章站点的RSS地址，还可以修改第80行后的”shot“为你所用主题自定义分类法名称，抓取的文章会自动添加到该分类法中。" target="_blank" rel="external">http://dribbble.com/tammyhart/shots.rss“为准备抓取文章站点的RSS地址，还可以修改第80行后的”shot“为你所用主题自定义分类法名称，抓取的文章会自动添加到该分类法中。</a><br>上述代码中并没有抓取文章内容的功能，仅供参考学习之用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码基本原理，新建一个自定义分类法“shot”，自动从另一个站点的RSS抓取文章，放在一个数组中，再用这个数组创建“shot”文章，并为文章添加自定义栏目image和link_url，方便调用缩略图和原文链接。&lt;br&gt;
    
    </summary>
    
      <category term="技术分享" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/WordPress/"/>
    
    
      <category term="WordPress" scheme="http://blog.jiangnan.pw/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>热烈庆祝江南品味正式上线！</title>
    <link href="http://blog.jiangnan.pw/2016/10/13/%E7%83%AD%E7%83%88%E5%BA%86%E7%A5%9D%E6%B1%9F%E5%8D%97%E5%93%81%E5%91%B3%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF%EF%BC%81/"/>
    <id>http://blog.jiangnan.pw/2016/10/13/热烈庆祝江南品味正式上线！/</id>
    <published>2016-10-13T07:39:35.000Z</published>
    <updated>2017-01-19T08:13:36.217Z</updated>
    
    <content type="html"><![CDATA[<p>最近，本地搭建的Web系统遭遇黑客攻击，积累了三年的代码资源都被植入了恶意代码。<br><!--excerpt--></p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote>
<p>最近，本地搭建的Web系统遭遇黑客攻击，积累了三年的代码资源都被植入了恶意代码。经过了两天的努力奋战挽救回来了所有的代码。但是保加利亚的黑客不断的扫描我的IP，致使我的电脑CPU一度达到80℃~90℃，无奈之下展示关闭服务器。</p>
</blockquote>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><blockquote>
<p>目前转投HEXO，Github门下开始技术博客的更新，今天发布的只是一个测试文章，因为MarkDown的语法还不熟悉只能边学边写希望大家谅解。最后热烈庆祝<strong>江南品味</strong>正式上线！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近，本地搭建的Web系统遭遇黑客攻击，积累了三年的代码资源都被植入了恶意代码。&lt;br&gt;&lt;!--excerpt--&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;blockq
    
    </summary>
    
      <category term="作品展示" scheme="http://blog.jiangnan.pw/categories/%E4%BD%9C%E5%93%81%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="江南品味" scheme="http://blog.jiangnan.pw/tags/%E6%B1%9F%E5%8D%97%E5%93%81%E5%91%B3/"/>
    
  </entry>
  
</feed>
